Script started on Mon 06 Feb 2017 05:12:41 AM EST
]0;tuser@tutor-vserver: ~/hw1_part1tuser@tutor-vserver:~/hw1_part1$ exitrm remgdb-testio_mod.script [14Pgdb testio.lnx
GNU gdb (GDB) 7.0.1-debian
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /home/tuser/hw1_part1/testio.lnx...done.
(gdb) tar rem /dev/ttyS0
Remote debugging using /dev/ttyS0
0x00100100 in ?? ()
(gdb) set $eip = 0x100100
(gdb) b main
Breakpoint 1 at 0x100374: file testio.c, line 32.
(gdb) c
Continuing.

Breakpoint 1, main () at testio.c:32
32	  lib_console_dev = sys_get_console_dev();  /* SAPC support lib fn */
(gdb) l
27	{
28	  char buf[BUFLEN];
29	  int got, i, lib_console_dev, ldev;
30	
31	  /* Determine the SAPC's "console" device, the serial port for user i/o */
32	  lib_console_dev = sys_get_console_dev();  /* SAPC support lib fn */
33	  switch(lib_console_dev) {
34	  case COM1: ldev = TTY0;	/* convert to our dev #'s */
35	    break;
36	  case COM2: ldev = TTY1;
(gdb) n
0x000595c0 in ?? ()
(gdb) b 45
Breakpoint 2 at 0x1003da: file testio.c, line 45.
(gdb) c
Continuing.

Breakpoint 2, main () at testio.c:45
45	  kprintf("\nTrying simple write(4 chars)...\n");
(gdb) n
46	  got = write(ldev,"hi!\n",4);
(gdb) 
47	  kprintf("write of 4 returned %d\n",got);
(gdb) p got
$1 = 4
(gdb) 
$2 = 4
(gdb) n
48	  delay();  /* time for output to finish, once write-behind is working */
(gdb) l [K
43	
44	  ioinit();  /* Initialize devices */
45	  kprintf("\nTrying simple write(4 chars)...\n");
46	  got = write(ldev,"hi!\n",4);
47	  kprintf("write of 4 returned %d\n",got);
48	  delay();  /* time for output to finish, once write-behind is working */
49	
50	  kprintf("Trying longer write (9 chars)\n");
51	  got = write(ldev, "abcdefghi", 9);
52	  kprintf("write of 9 returned %d\n",got);
(gdb) b 62
Breakpoint 3 at 0x1004d0: file testio.c, line 62.
(gdb) c[Kc
Continuing.

Breakpoint 3, main () at testio.c:62
62	  kprintf("\nType 10 chars input to test typeahead while looping for delay...\n");
(gdb) display buf
1: buf = "AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\\\]]^^__``aabbccddeeffgghh"
(gdb) b 83
Breakpoint 4 at 0x1005e3: file testio.c, line 83.
(gdb) c
Continuing.

Breakpoint 4, main () at testio.c:83
83	  kprintf("\nAsked for 20 characters; got %d\n", got);
1: buf = "123455DDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\\\]]^^__``aabbccddeeffgghh"
(gdb) c
Continuing.

Program received signal SIGTRAP, Trace/breakpoint trap.
startupc () at startup.c:4
4	startup.c: No such file or directory.
	in startup.c
(gdb) quit
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;tuser@tutor-vserver: ~/hw1_part1tuser@tutor-vserver:~/hw1_part1$ exit
exit

Script done on Mon 06 Feb 2017 05:15:54 AM EST
